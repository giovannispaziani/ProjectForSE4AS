[
    {
        "id": "99285b04ab31eeb3",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb950f3a0b286899",
        "type": "group",
        "z": "99285b04ab31eeb3",
        "name": "Analyzer data",
        "style": {
            "label": true
        },
        "nodes": [
            "820d0254027143de",
            "d08ef2268e982688",
            "c9a71f1c79ee850e",
            "bdeb025c06e44332",
            "27fa2ccb71482fa2",
            "708ce20633e474fa",
            "aa8db65cf8d49931",
            "9da49b95aeeae627",
            "8e10011ddb497877",
            "69a4edec5388ccba",
            "4e4bc5e9bbd431f4",
            "69346df0a8d62419",
            "e9c565322b3d5627"
        ],
        "x": 974,
        "y": 159,
        "w": 962,
        "h": 342
    },
    {
        "id": "c46509ea1b2d8f12",
        "type": "group",
        "z": "99285b04ab31eeb3",
        "name": "Sensors",
        "style": {
            "label": true
        },
        "nodes": [
            "4ec86d32c18d72a7",
            "eaf74ef210b83cc2",
            "3b035bcd0357046a",
            "45b88026b7b7ec79",
            "b724841ba4d5d5c6",
            "a4436ca70d42ed78",
            "54c702c1e475a2ba",
            "e273b5831dc89801",
            "30951266efd5c437",
            "774aed2d8aeb26e7",
            "51e59edd57f80611",
            "39cad1b3de2f9502",
            "30551fdae7dbe478",
            "c00e4019eed03f58",
            "6fa6df0967978f72",
            "9e5ddaebea5cee5e",
            "2363fecfea3f66f7",
            "69cdd640f41afcac"
        ],
        "x": 14,
        "y": 159,
        "w": 952,
        "h": 462
    },
    {
        "id": "a928ba0.2d1f748",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.30.0.101",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0648859e6711c8f9",
        "type": "ui_tab",
        "name": "MQTT and COAP Sensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ae2aceeadfb4b296",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cd6116aa8b23d0c6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6043b1181f466e6d",
        "type": "ui_tab",
        "name": "SMART HOME MONITORING",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6ddbd751be509e35",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://172.30.0.103:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "575f0b6b213a240c",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55277096f27f8c4f",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d80d5173b7311e0a",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "76abae67c4b97895",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ec86d32c18d72a7",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/sensor/#",
        "qos": "0",
        "datatype": "json",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 340,
        "wires": [
            [
                "39cad1b3de2f9502"
            ]
        ]
    },
    {
        "id": "eaf74ef210b83cc2",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "3b035bcd0357046a",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "575f0b6b213a240c",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "TEMPERATURE",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "45b88026b7b7ec79",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "575f0b6b213a240c",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "LIGHT",
        "label": "LUX",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 240,
        "wires": []
    },
    {
        "id": "b724841ba4d5d5c6",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "55277096f27f8c4f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ENERGY",
        "label": "kWh",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "a4436ca70d42ed78",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "55277096f27f8c4f",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_TEMP",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "54c702c1e475a2ba",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "d80d5173b7311e0a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_LOAD",
        "label": "Groceries",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "12ecebe8cef6c1d6",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "Test email data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"_value\": 4500}, {\"_value\": 4600}]",
        "payloadType": "json",
        "x": 440,
        "y": 1440,
        "wires": [
            [
                "7cf77d0392859c23",
                "b35c7d8a1d3470c2"
            ]
        ]
    },
    {
        "id": "7cf77d0392859c23",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "name": "",
        "topic": "data/test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 620,
        "y": 1440,
        "wires": []
    },
    {
        "id": "87fdd9a04115344d",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "influxdb": "6ddbd751be509e35",
        "name": "Last hour energy consumption",
        "query": "from(bucket: \"Iot-project\")\n  |> range(start: -1m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"iot-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/energy\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Iot-23-24",
        "x": 390,
        "y": 1400,
        "wires": [
            [
                "6ec8c9bf04165dde",
                "b35c7d8a1d3470c2"
            ]
        ]
    },
    {
        "id": "6ec8c9bf04165dde",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 575,
        "y": 1360,
        "wires": [],
        "l": false
    },
    {
        "id": "b8fd3d525c576a1e",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1400,
        "wires": [
            [
                "87fdd9a04115344d"
            ]
        ]
    },
    {
        "id": "b35c7d8a1d3470c2",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "name": "convert to ints",
        "func": "let min = Math.round(msg.payload[0]._value);\nlet max = Math.round(msg.payload[1]._value);\nlet diff = max - min;\nlet payload = {\"min\": min, \"diff\": diff};\nlet msg2 = {\"payload\": payload};\nmsg = msg2;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1400,
        "wires": [
            [
                "8ac1a2f68bd47fcc",
                "f7e5fb872702f20b"
            ]
        ]
    },
    {
        "id": "8ac1a2f68bd47fcc",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 885,
        "y": 1400,
        "wires": [],
        "l": false
    },
    {
        "id": "953790de6e536d24",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "name": "Format payload",
        "func": "let topic = \"Hourly energy report from Node-RED\";\nlet body = msg.payload;\nmsg.topic = topic;\nmsg.payload = body;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1440,
        "wires": [
            [
                "3829096d8cc5e9e4",
                "fee896c385f0e5d5"
            ]
        ]
    },
    {
        "id": "f7e5fb872702f20b",
        "type": "template",
        "z": "99285b04ab31eeb3",
        "name": "Email template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Hello!\nThis is your hourly energy consumption report.\n\n<ul>\n    <li>Total energy consumed thus far: {{payload.min}} kWh</li>\n    <li>Energy consumed in the last hour: {{payload.diff}} kWh</li>\n</ul>",
        "output": "str",
        "x": 800,
        "y": 1440,
        "wires": [
            [
                "953790de6e536d24",
                "8ac1a2f68bd47fcc"
            ]
        ]
    },
    {
        "id": "3829096d8cc5e9e4",
        "type": "e-mail",
        "z": "99285b04ab31eeb3",
        "d": true,
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "dario.dercole@student.univaq.it",
        "dname": "",
        "x": 1230,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fee896c385f0e5d5",
        "type": "e-mail",
        "z": "99285b04ab31eeb3",
        "d": true,
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "giovanni.spaziani@student.univaq.it",
        "dname": "",
        "x": 1250,
        "y": 1460,
        "wires": []
    },
    {
        "id": "820d0254027143de",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "topic": "",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "708ce20633e474fa"
            ]
        ]
    },
    {
        "id": "d08ef2268e982688",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/SmartHomeD&G/analyzer/config/temperature_analyzer",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1690,
        "y": 380,
        "wires": []
    },
    {
        "id": "c9a71f1c79ee850e",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "temperature analyzer configuration",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"configuration\":{\"min_temp\":18,\"working_threshold\":1}}",
        "payloadType": "json",
        "x": 1260,
        "y": 380,
        "wires": [
            [
                "d08ef2268e982688"
            ]
        ]
    },
    {
        "id": "bdeb025c06e44332",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/SmartHomeD&G/analyzer/config/energy_analyzer",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1670,
        "y": 460,
        "wires": []
    },
    {
        "id": "27fa2ccb71482fa2",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "energy analyzer configuration",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"configuration\":{\"max_total_kw\":3,\"warning_threshold_kw\":2.5}}",
        "payloadType": "json",
        "x": 1270,
        "y": 460,
        "wires": [
            [
                "bdeb025c06e44332"
            ]
        ]
    },
    {
        "id": "e273b5831dc89801",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "d80d5173b7311e0a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "DISHWASHER_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "1500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "30951266efd5c437",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "76abae67c4b97895",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 440,
        "wires": []
    },
    {
        "id": "774aed2d8aeb26e7",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "d": true,
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "76abae67c4b97895",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "LAMP_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "708ce20633e474fa",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "fetch last minute values",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "aa8db65cf8d49931",
                "8e10011ddb497877"
            ]
        ]
    },
    {
        "id": "aa8db65cf8d49931",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1355,
        "y": 260,
        "wires": [],
        "l": false
    },
    {
        "id": "9da49b95aeeae627",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Analyzer topics",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1820,
        "y": 320,
        "wires": []
    },
    {
        "id": "8e10011ddb497877",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Process values",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    const measurement = element['_measurement'];\n    if(!Object.hasOwn(new_payload, measurement)){\n        new_payload[measurement] = {};\n    }\n    const sensor = element['sensor']\n    if(measurement === 'smart_appliance'){\n        if(!Object.hasOwn(new_payload[measurement], sensor)){\n            new_payload[measurement][sensor] = {};\n        }\n        const value_name = element['value_name']\n        if (!Object.hasOwn(new_payload[measurement][sensor], value_name)) {\n            new_payload[measurement][sensor][value_name] = [];\n        }\n        new_payload[measurement][sensor][value_name].push(element);\n    }else{\n        if (!Object.hasOwn(new_payload[measurement], sensor)) {\n            new_payload[measurement][sensor] = [];\n        }\n        new_payload[measurement][sensor].push(element);\n    }\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 200,
        "wires": [
            [
                "69a4edec5388ccba"
            ]
        ]
    },
    {
        "id": "30551fdae7dbe478",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "initial sensors",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sensors\":{\"temperature\":{\"livingroom_temp_1\":{\"room\":\"livingroom\",\"data_type\":\"float\",\"starting_value\":22,\"delta_range\":[-0.1,0.1],\"lower_limit\":15,\"lower_limit_correction\":[0,0.2],\"upper_limit\":25,\"upper_limit_correction\":[-0.2,0]}},\"light\":{\"livingroom_light_1\":{\"room\":\"livingroom\",\"data_type\":\"int\",\"starting_value\":10,\"lux_per_lamp\":60,\"lux_from_sun\":10000},\"kitchen_light_1\":{\"room\":\"kitchen\",\"data_type\":\"int\",\"starting_value\":10,\"lux_per_lamp\":60,\"lux_from_sun\":9500},\"bathroom_light_1\":{\"room\":\"bathroom\",\"data_type\":\"int\",\"starting_value\":10,\"lux_per_lamp\":60,\"lux_from_sun\":7000},\"bedroom_light_1\":{\"room\":\"bedroom\",\"data_type\":\"int\",\"starting_value\":10,\"lux_per_lamp\":60,\"lux_from_sun\":7000}},\"energy\":{\"livingroom_thermostat_1\":{\"room\":\"livingroom\",\"data_type\":\"int\",\"starting_value\":2,\"delta_range\":[-1,3]},\"livingroom_lamp_1\":{\"room\":\"livingroom\",\"data_type\":\"int\",\"starting_value\":8,\"delta_range\":[-1,7]},\"livingroom_lamp_2\":{\"room\":\"livingroom\",\"data_type\":\"int\",\"starting_value\":8,\"delta_range\":[-1,7]},\"kitchen_lamp_1\":{\"room\":\"kitchen\",\"data_type\":\"int\",\"starting_value\":8,\"delta_range\":[-1,7]},\"bathroom_lamp_1\":{\"room\":\"bathroom\",\"data_type\":\"int\",\"starting_value\":8,\"delta_range\":[-1,7]},\"bedroom_lamp_1\":{\"room\":\"bedroom\",\"data_type\":\"int\",\"starting_value\":8,\"delta_range\":[-1,7]},\"kitchen_dishwasher_1\":{\"room\":\"kitchen\",\"data_type\":\"int\",\"starting_value\":1000,\"delta_range\":[-200,500]},\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"data_type\":\"int\",\"starting_value\":150,\"delta_range\":[-50,150]}},\"smart_appliance\":{\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"values\":{\"load\":{\"data_type\":\"int\",\"starting_value\":50,\"open_delta_range\":[-3,3],\"refill_threshold\":7,\"refill_delta_range\":[3,46]},\"temp\":{\"data_type\":\"float\",\"starting_value\":4,\"delta_range\":[-0.1,0],\"open_delta_range\":[0,2],\"refill_threshold\":7,\"refill_delta_range\":[1,4],\"lower_limit\":2,\"lower_limit_correction\":[0,0.1],\"upper_limit\":10,\"upper_limit_correction\":[-0.2,0]}}}}}}",
        "payloadType": "json",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "c00e4019eed03f58"
            ]
        ]
    },
    {
        "id": "c00e4019eed03f58",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/simulation/sensors",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 470,
        "y": 420,
        "wires": []
    },
    {
        "id": "6fa6df0967978f72",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "environment state",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"states\":{\"windows\":{\"livingroom_window_1\":{\"room\":\"livingroom\",\"state\":1},\"kitchen_window_1\":{\"room\":\"kitchen\",\"state\":0},\"bathroom_window_1\":{\"room\":\"bathroom\",\"state\":0},\"bedroom_window_1\":{\"room\":\"bedroom\",\"state\":0}},\"lamps\":{\"livingroom_lamp_1\":{\"room\":\"livingroom\",\"state\":0},\"livingroom_lamp_2\":{\"room\":\"livingroom\",\"state\":0},\"kitchen_lamp_1\":{\"room\":\"kitchen\",\"state\":0},\"bathroom_lamp_1\":{\"room\":\"bathroom\",\"state\":0},\"bedroom_lamp_1\":{\"room\":\"bedroom\",\"state\":0}},\"shutters\":{\"livingroom_shutter_1\":{\"room\":\"livingroom\",\"state\":1},\"kitchen_shutter_1\":{\"room\":\"kitchen\",\"state\":1},\"bathroom_shutter_1\":{\"room\":\"bathroom\",\"state\":1},\"bedroom_shutter_1\":{\"room\":\"bedroom\",\"state\":1}},\"smart_appliances\":{\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"state\":0},\"kitchen_dishwasher_1\":{\"room\":\"kitchen\",\"state\":0}}}}",
        "payloadType": "json",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "9e5ddaebea5cee5e"
            ]
        ]
    },
    {
        "id": "9e5ddaebea5cee5e",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/simulation/state",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 460,
        "y": 500,
        "wires": []
    },
    {
        "id": "51e59edd57f80611",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "Telegraf topics",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 620,
        "y": 340,
        "wires": []
    },
    {
        "id": "39cad1b3de2f9502",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "Build telegraf topic",
        "func": "let sensor_topic = msg.topic;\nlet value = msg.payload['value'];\n\n//build the topic string\nsensor_topic = sensor_topic.replace('sensor','data');\n//0: root, 1: SmartHomeD&G, 2: data, 3: int/float, \n//4: sensor type, 5: room, 6: sensor name, *7: value name\n//* ONLY FOR SMART APPLIANCES\nconst topic_parts = sensor_topic.split('/');\n//build the json\nlet telegraf_json;\nif(topic_parts[4] === \"smart_appliance\"){\n    telegraf_json = {\n        \"data_type\": topic_parts[3],\n        \"measurement\": topic_parts[4],\n        \"room\": topic_parts[5],\n        \"sensor\": topic_parts[6],\n        \"value_name\" : topic_parts[7],\n        \"value\": value\n    }\n}else{\n    telegraf_json = {\n        \"data_type\" : topic_parts[3],\n        \"measurement\" : topic_parts[4],\n        \"room\" : topic_parts[5],\n        \"sensor\" : topic_parts[6] || topic_parts[5],\n        \"value\" : value\n    }\n}\nmsg.payload = telegraf_json\nmsg.topic = sensor_topic\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 340,
        "wires": [
            [
                "51e59edd57f80611",
                "eaf74ef210b83cc2"
            ]
        ]
    },
    {
        "id": "69a4edec5388ccba",
        "type": "split",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Split by measurement",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "2",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "property": "payload",
        "x": 1740,
        "y": 200,
        "wires": [
            [
                "e9c565322b3d5627"
            ]
        ]
    },
    {
        "id": "4e4bc5e9bbd431f4",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Build analyzer topic",
        "func": "let topic = \"/SmartHomeD&G/analyzer\";\nconst keys = Object.keys(msg.payload);\nlet obj = msg.payload[keys[0]]\n//Perform depth-first search of the measurement name\nwhile(!Object.hasOwn(obj, '_measurement')){\n    const keys = Object.keys(obj);\n    obj = obj[keys[0]];\n}\ntopic = `${topic}/${obj['_measurement']}/${obj['room']}/${obj['sensor']}`;\n// if(obj['value_name']){\n//     topic = `${topic}/${obj['value_name']}`;\n// }\nmsg.topic = topic\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 260,
        "wires": [
            [
                "9da49b95aeeae627",
                "69346df0a8d62419"
            ]
        ]
    },
    {
        "id": "69346df0a8d62419",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1875,
        "y": 260,
        "wires": [],
        "l": false
    },
    {
        "id": "e9c565322b3d5627",
        "type": "split",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Split by sensor",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "property": "payload",
        "x": 1540,
        "y": 260,
        "wires": [
            [
                "4e4bc5e9bbd431f4"
            ]
        ]
    },
    {
        "id": "274ac2c48bdcb6d5",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "name": "",
        "topic": "/SmartHomeD&G/planner/config/temperature_planner",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1600,
        "y": 620,
        "wires": []
    },
    {
        "id": "c260fb0e3295fd80",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "temperature planner configuration",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"configuration\":{\"min_temp\":18,\"working_threshold\":1}}",
        "payloadType": "json",
        "x": 1160,
        "y": 620,
        "wires": [
            [
                "274ac2c48bdcb6d5"
            ]
        ]
    },
    {
        "id": "69cdd640f41afcac",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "initial actuators",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"actuators\":{\"windows\":{\"livingroom_window_1\":{\"room\":\"livingroom\",\"state\":1,\"automation_enabled\":1},\"kitchen_window_1\":{\"room\":\"kitchen\",\"state\":0,\"automation_enabled\":1},\"bathroom_window_1\":{\"room\":\"bathroom\",\"state\":0,\"automation_enabled\":1},\"bedroom_window_1\":{\"room\":\"bedroom\",\"state\":0,\"automation_enabled\":1}},\"lamps\":{\"livingroom_lamp_1\":{\"room\":\"livingroom\",\"state\":0,\"automation_enabled\":1},\"livingroom_lamp_2\":{\"room\":\"livingroom\",\"state\":0,\"automation_enabled\":1},\"kitchen_lamp_1\":{\"room\":\"kitchen\",\"state\":0,\"automation_enabled\":1},\"bathroom_lamp_1\":{\"room\":\"bathroom\",\"state\":0,\"automation_enabled\":1},\"bedroom_lamp_1\":{\"room\":\"bedroom\",\"state\":0,\"automation_enabled\":1}},\"shutters\":{\"livingroom_shutter_1\":{\"room\":\"livingroom\",\"state\":1,\"automation_enabled\":1},\"kitchen_shutter_1\":{\"room\":\"kitchen\",\"state\":1,\"automation_enabled\":1},\"bathroom_shutter_1\":{\"room\":\"bathroom\",\"state\":1,\"automation_enabled\":1},\"bedroom_shutter_1\":{\"room\":\"bedroom\",\"state\":1,\"automation_enabled\":1}},\"smart_appliances\":{\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"state_type\":\"toggle\",\"state\":0,\"automation_enabled\":1},\"kitchen_dishwasher_1\":{\"room\":\"kitchen\",\"state_type\":\"multiple\",\"state\":0,\"automation_enabled\":1}}}}",
        "payloadType": "json",
        "x": 200,
        "y": 580,
        "wires": [
            [
                "2363fecfea3f66f7"
            ]
        ]
    },
    {
        "id": "2363fecfea3f66f7",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/simulation/actuators",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 510,
        "y": 580,
        "wires": []
    }
]