[
    {
        "id": "99285b04ab31eeb3",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb950f3a0b286899",
        "type": "group",
        "z": "99285b04ab31eeb3",
        "name": "Analyzer data",
        "style": {
            "label": true
        },
        "nodes": [
            "b451db19bfc01ed5",
            "820d0254027143de",
            "1b810b41ede51439",
            "3e300eaffa57511d",
            "cc579c99656587a2",
            "aab0a8695c7fe9d0",
            "4d88e44a6c4385ba",
            "41196dbe13b86f19",
            "4eddf091a0f1456a",
            "f7e85569ce21407a",
            "d851253f6d300a27",
            "a59bdda345f82565",
            "28d601ee22eb13f1",
            "d8a11832b26a4ae8",
            "6ec0ec73dd7e47ac",
            "6a1fbbcceb5bb765",
            "bdde9fdc9c7814a0",
            "d08ef2268e982688",
            "c9a71f1c79ee850e",
            "bdeb025c06e44332",
            "27fa2ccb71482fa2",
            "d42e1a5fcbc5259b",
            "554be1a8bce11545",
            "dcb66fe337292b34",
            "b6b8fe3787b34f56",
            "c08c409a7ec9bb3f",
            "6446f91eeac9f98e",
            "e6c01f95a6387805",
            "976e90f77194fa82",
            "3030d27fb717c3f1",
            "8f8329f17eca6354",
            "52f30fdfa8455b3d",
            "4390dd8ee8bcc70c",
            "708ce20633e474fa",
            "aa8db65cf8d49931",
            "9da49b95aeeae627",
            "8e10011ddb497877"
        ],
        "x": 714,
        "y": 19,
        "w": 1012,
        "h": 1142
    },
    {
        "id": "c46509ea1b2d8f12",
        "type": "group",
        "z": "99285b04ab31eeb3",
        "name": "Sensors",
        "style": {
            "label": true
        },
        "nodes": [
            "4ec86d32c18d72a7",
            "eaf74ef210b83cc2",
            "5b46401d22c6d9b1",
            "835de6ae498d4423",
            "c909674f140f236c",
            "1b8eef526443c2ce",
            "4d985ed722db58ae",
            "75f6ddb81a3ff120",
            "303d99ce1ce38904",
            "305f32c141b5aa2c",
            "3b035bcd0357046a",
            "45b88026b7b7ec79",
            "b724841ba4d5d5c6",
            "a4436ca70d42ed78",
            "54c702c1e475a2ba",
            "1a194a38b4f38873",
            "ac516eacc063dd16",
            "843f1870068bea7a",
            "0ffca6d7cc17dcee",
            "9df29bcec682b86d",
            "edcd452354fbaf31",
            "53b79310569204a0",
            "e273b5831dc89801",
            "66d260cd7d4019fe",
            "6bf77038ef82b3e3",
            "bcad8237e12390b8",
            "30951266efd5c437",
            "a2df48a9a3a614ce",
            "0daf42dd905f4843",
            "1f9bfee05a6a9ae7",
            "774aed2d8aeb26e7",
            "473c15259d1b41d7"
        ],
        "x": 94,
        "y": 19,
        "w": 612,
        "h": 1142
    },
    {
        "id": "a928ba0.2d1f748",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.30.0.101",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0648859e6711c8f9",
        "type": "ui_tab",
        "name": "MQTT and COAP Sensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ae2aceeadfb4b296",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "cd6116aa8b23d0c6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6043b1181f466e6d",
        "type": "ui_tab",
        "name": "SMART HOME MONITORING",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6ddbd751be509e35",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://172.30.0.103:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "575f0b6b213a240c",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55277096f27f8c4f",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d80d5173b7311e0a",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "76abae67c4b97895",
        "type": "ui_group",
        "name": "",
        "tab": "6043b1181f466e6d",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ec86d32c18d72a7",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "eaf74ef210b83cc2",
                "3b035bcd0357046a",
                "1a194a38b4f38873"
            ]
        ]
    },
    {
        "id": "eaf74ef210b83cc2",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 60,
        "wires": [],
        "l": false
    },
    {
        "id": "5b46401d22c6d9b1",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/Light",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "4d985ed722db58ae",
                "45b88026b7b7ec79",
                "ac516eacc063dd16"
            ]
        ]
    },
    {
        "id": "835de6ae498d4423",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/Energy",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "75f6ddb81a3ff120",
                "b724841ba4d5d5c6",
                "843f1870068bea7a"
            ]
        ]
    },
    {
        "id": "c909674f140f236c",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/FridgeTemp",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 520,
        "wires": [
            [
                "303d99ce1ce38904",
                "a4436ca70d42ed78",
                "0ffca6d7cc17dcee"
            ]
        ]
    },
    {
        "id": "1b8eef526443c2ce",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/FridgeLoad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 660,
        "wires": [
            [
                "305f32c141b5aa2c",
                "54c702c1e475a2ba",
                "9df29bcec682b86d"
            ]
        ]
    },
    {
        "id": "4d985ed722db58ae",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 200,
        "wires": [],
        "l": false
    },
    {
        "id": "75f6ddb81a3ff120",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 340,
        "wires": [],
        "l": false
    },
    {
        "id": "303d99ce1ce38904",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 480,
        "wires": [],
        "l": false
    },
    {
        "id": "305f32c141b5aa2c",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 620,
        "wires": [],
        "l": false
    },
    {
        "id": "3b035bcd0357046a",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "575f0b6b213a240c",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "TEMPERATURE",
        "label": "°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "45b88026b7b7ec79",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "575f0b6b213a240c",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "LIGHT",
        "label": "LUX",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 490,
        "y": 240,
        "wires": []
    },
    {
        "id": "b724841ba4d5d5c6",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "55277096f27f8c4f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "ENERGY",
        "label": "kWh",
        "format": "{{value}}",
        "min": 0,
        "max": "10000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 500,
        "y": 380,
        "wires": []
    },
    {
        "id": "a4436ca70d42ed78",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "55277096f27f8c4f",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_TEMP",
        "label": "°C",
        "format": "{{value}}",
        "min": "-10",
        "max": "15",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 520,
        "wires": []
    },
    {
        "id": "54c702c1e475a2ba",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "d80d5173b7311e0a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_LOAD",
        "label": "Groceries",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 660,
        "wires": []
    },
    {
        "id": "12ecebe8cef6c1d6",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "Test email data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"_value\": 4500}, {\"_value\": 4600}]",
        "payloadType": "json",
        "x": 440,
        "y": 1440,
        "wires": [
            [
                "7cf77d0392859c23",
                "b35c7d8a1d3470c2"
            ]
        ]
    },
    {
        "id": "7cf77d0392859c23",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "name": "",
        "topic": "data/test",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 620,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1a194a38b4f38873",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/float/temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 550,
        "y": 140,
        "wires": []
    },
    {
        "id": "ac516eacc063dd16",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/int/light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 520,
        "y": 280,
        "wires": []
    },
    {
        "id": "843f1870068bea7a",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/float/energy",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 530,
        "y": 420,
        "wires": []
    },
    {
        "id": "0ffca6d7cc17dcee",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/float/fridge_temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "9df29bcec682b86d",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/int/fridge_load",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 540,
        "y": 700,
        "wires": []
    },
    {
        "id": "87fdd9a04115344d",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "influxdb": "6ddbd751be509e35",
        "name": "Last hour energy consumption",
        "query": "from(bucket: \"Iot-project\")\n  |> range(start: -1m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"iot-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/energy\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Iot-23-24",
        "x": 390,
        "y": 1400,
        "wires": [
            [
                "6ec8c9bf04165dde",
                "b35c7d8a1d3470c2"
            ]
        ]
    },
    {
        "id": "6ec8c9bf04165dde",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 575,
        "y": 1360,
        "wires": [],
        "l": false
    },
    {
        "id": "b8fd3d525c576a1e",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1400,
        "wires": [
            [
                "87fdd9a04115344d"
            ]
        ]
    },
    {
        "id": "b35c7d8a1d3470c2",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "name": "convert to ints",
        "func": "let min = Math.round(msg.payload[0]._value);\nlet max = Math.round(msg.payload[1]._value);\nlet diff = max - min;\nlet payload = {\"min\": min, \"diff\": diff};\nlet msg2 = {\"payload\": payload};\nmsg = msg2;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1400,
        "wires": [
            [
                "8ac1a2f68bd47fcc",
                "f7e5fb872702f20b"
            ]
        ]
    },
    {
        "id": "8ac1a2f68bd47fcc",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 885,
        "y": 1400,
        "wires": [],
        "l": false
    },
    {
        "id": "953790de6e536d24",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "name": "Format payload",
        "func": "let topic = \"Hourly energy report from Node-RED\";\nlet body = msg.payload;\nmsg.topic = topic;\nmsg.payload = body;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1440,
        "wires": [
            [
                "3829096d8cc5e9e4",
                "fee896c385f0e5d5"
            ]
        ]
    },
    {
        "id": "f7e5fb872702f20b",
        "type": "template",
        "z": "99285b04ab31eeb3",
        "name": "Email template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Hello!\nThis is your hourly energy consumption report.\n\n<ul>\n    <li>Total energy consumed thus far: {{payload.min}} kWh</li>\n    <li>Energy consumed in the last hour: {{payload.diff}} kWh</li>\n</ul>",
        "output": "str",
        "x": 800,
        "y": 1440,
        "wires": [
            [
                "953790de6e536d24",
                "8ac1a2f68bd47fcc"
            ]
        ]
    },
    {
        "id": "3829096d8cc5e9e4",
        "type": "e-mail",
        "z": "99285b04ab31eeb3",
        "d": true,
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "dario.dercole@student.univaq.it",
        "dname": "",
        "x": 1230,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fee896c385f0e5d5",
        "type": "e-mail",
        "z": "99285b04ab31eeb3",
        "d": true,
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": false,
        "name": "giovanni.spaziani@student.univaq.it",
        "dname": "",
        "x": 1250,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b451db19bfc01ed5",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last temperature",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"float_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/float/temperature\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1020,
        "y": 60,
        "wires": [
            [
                "1b810b41ede51439",
                "bdde9fdc9c7814a0"
            ]
        ]
    },
    {
        "id": "820d0254027143de",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "props": [],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "x": 810,
        "y": 460,
        "wires": [
            [
                "b451db19bfc01ed5",
                "cc579c99656587a2",
                "41196dbe13b86f19",
                "d851253f6d300a27",
                "d8a11832b26a4ae8",
                "c08c409a7ec9bb3f",
                "3030d27fb717c3f1",
                "708ce20633e474fa"
            ]
        ]
    },
    {
        "id": "1b810b41ede51439",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 100,
        "wires": [],
        "l": false
    },
    {
        "id": "3e300eaffa57511d",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1500,
        "y": 60,
        "wires": []
    },
    {
        "id": "cc579c99656587a2",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last fridge temp",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"float_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/float/fridge_temp\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1020,
        "y": 160,
        "wires": [
            [
                "aab0a8695c7fe9d0",
                "d42e1a5fcbc5259b"
            ]
        ]
    },
    {
        "id": "aab0a8695c7fe9d0",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 200,
        "wires": [],
        "l": false
    },
    {
        "id": "4d88e44a6c4385ba",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/fridge_temp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1500,
        "y": 160,
        "wires": []
    },
    {
        "id": "41196dbe13b86f19",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last light",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"int_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/int/light\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1040,
        "y": 260,
        "wires": [
            [
                "4eddf091a0f1456a",
                "554be1a8bce11545"
            ]
        ]
    },
    {
        "id": "4eddf091a0f1456a",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "f7e85569ce21407a",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1480,
        "y": 260,
        "wires": []
    },
    {
        "id": "d851253f6d300a27",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last energy",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"float_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/float/energy\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "a59bdda345f82565",
                "dcb66fe337292b34"
            ]
        ]
    },
    {
        "id": "a59bdda345f82565",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 400,
        "wires": [],
        "l": false
    },
    {
        "id": "28d601ee22eb13f1",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/energy/total",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1500,
        "y": 360,
        "wires": []
    },
    {
        "id": "d8a11832b26a4ae8",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last fridge load",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"int_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/int/fridge_load\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "6ec0ec73dd7e47ac",
                "b6b8fe3787b34f56"
            ]
        ]
    },
    {
        "id": "6ec0ec73dd7e47ac",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 500,
        "wires": [],
        "l": false
    },
    {
        "id": "6a1fbbcceb5bb765",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/fridge_load",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1500,
        "y": 460,
        "wires": []
    },
    {
        "id": "d08ef2268e982688",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/config/temperature_analyzer",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1390,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c9a71f1c79ee850e",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "temperature analyzer configuration",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"configuration\":{\"min_temp\":18,\"working_threshold\":1}}",
        "payloadType": "json",
        "x": 1000,
        "y": 1040,
        "wires": [
            [
                "d08ef2268e982688"
            ]
        ]
    },
    {
        "id": "bdeb025c06e44332",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/config/energy_analyzer",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1380,
        "y": 1120,
        "wires": []
    },
    {
        "id": "27fa2ccb71482fa2",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "energy analyzer configuration",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"configuration\":{\"max_total_kw\":3,\"warning_threshold_kw\":2.5}}",
        "payloadType": "json",
        "x": 1010,
        "y": 1120,
        "wires": [
            [
                "bdeb025c06e44332"
            ]
        ]
    },
    {
        "id": "bdde9fdc9c7814a0",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 60,
        "wires": [
            [
                "3e300eaffa57511d"
            ]
        ]
    },
    {
        "id": "d42e1a5fcbc5259b",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 160,
        "wires": [
            [
                "4d88e44a6c4385ba"
            ]
        ]
    },
    {
        "id": "554be1a8bce11545",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 260,
        "wires": [
            [
                "f7e85569ce21407a"
            ]
        ]
    },
    {
        "id": "dcb66fe337292b34",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "28d601ee22eb13f1"
            ]
        ]
    },
    {
        "id": "b6b8fe3787b34f56",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 460,
        "wires": [
            [
                "6a1fbbcceb5bb765"
            ]
        ]
    },
    {
        "id": "edcd452354fbaf31",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/DishwasherPower",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 800,
        "wires": [
            [
                "53b79310569204a0",
                "e273b5831dc89801",
                "66d260cd7d4019fe"
            ]
        ]
    },
    {
        "id": "53b79310569204a0",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 760,
        "wires": [],
        "l": false
    },
    {
        "id": "e273b5831dc89801",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "d80d5173b7311e0a",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "DISHWASHER_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "1500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 800,
        "wires": []
    },
    {
        "id": "66d260cd7d4019fe",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/int/dishwasher_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 560,
        "y": 840,
        "wires": []
    },
    {
        "id": "6bf77038ef82b3e3",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/FridgePower",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 940,
        "wires": [
            [
                "bcad8237e12390b8",
                "30951266efd5c437",
                "a2df48a9a3a614ce"
            ]
        ]
    },
    {
        "id": "bcad8237e12390b8",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 900,
        "wires": [],
        "l": false
    },
    {
        "id": "30951266efd5c437",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "76abae67c4b97895",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "FRIDGE_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 940,
        "wires": []
    },
    {
        "id": "a2df48a9a3a614ce",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/int/fridge_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 540,
        "y": 980,
        "wires": []
    },
    {
        "id": "0daf42dd905f4843",
        "type": "mqtt in",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/SmartHomeD&G/LampPower",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a928ba0.2d1f748",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 1080,
        "wires": [
            [
                "1f9bfee05a6a9ae7",
                "774aed2d8aeb26e7",
                "473c15259d1b41d7"
            ]
        ]
    },
    {
        "id": "1f9bfee05a6a9ae7",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 455,
        "y": 1040,
        "wires": [],
        "l": false
    },
    {
        "id": "774aed2d8aeb26e7",
        "type": "ui_gauge",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "group": "76abae67c4b97895",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "LAMP_POWER",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "150",
        "colors": [
            "#00b500",
            "#e6e600",
            "#2cec13"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 520,
        "y": 1080,
        "wires": []
    },
    {
        "id": "473c15259d1b41d7",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "c46509ea1b2d8f12",
        "name": "",
        "topic": "/smart/int/lamp_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 540,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c08c409a7ec9bb3f",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last dishwasher power",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"int_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/int/dishwasher_power\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1000,
        "y": 560,
        "wires": [
            [
                "6446f91eeac9f98e",
                "976e90f77194fa82"
            ]
        ]
    },
    {
        "id": "6446f91eeac9f98e",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 600,
        "wires": [],
        "l": false
    },
    {
        "id": "e6c01f95a6387805",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/energy/dishwasher_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1540,
        "y": 560,
        "wires": []
    },
    {
        "id": "976e90f77194fa82",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 560,
        "wires": [
            [
                "e6c01f95a6387805"
            ]
        ]
    },
    {
        "id": "3030d27fb717c3f1",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last fridge power",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"int_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/int/fridge_power\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "8f8329f17eca6354",
                "4390dd8ee8bcc70c"
            ]
        ]
    },
    {
        "id": "8f8329f17eca6354",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "52f30fdfa8455b3d",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/energy/fridge_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1530,
        "y": 660,
        "wires": []
    },
    {
        "id": "4390dd8ee8bcc70c",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 660,
        "wires": [
            [
                "52f30fdfa8455b3d"
            ]
        ]
    },
    {
        "id": "708ce20633e474fa",
        "type": "influxdb in",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "influxdb": "6ddbd751be509e35",
        "name": "last lamp power",
        "query": "from(bucket: \"Se4as-project\")\n  |> range(start: -60s)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"int_mqtt_consumer\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"host\"] == \"se4as-app-container\")\n  |> filter(fn: (r) => r[\"topic\"] == \"/smart/int/lamp_power\")\n  |> aggregateWindow(every: 60s, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "Se4as-24-25",
        "x": 1020,
        "y": 760,
        "wires": [
            [
                "aa8db65cf8d49931",
                "8e10011ddb497877"
            ]
        ]
    },
    {
        "id": "aa8db65cf8d49931",
        "type": "debug",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "influx debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1085,
        "y": 800,
        "wires": [],
        "l": false
    },
    {
        "id": "9da49b95aeeae627",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "",
        "topic": "/smart/analyzer/energy/lamp_power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 1520,
        "y": 760,
        "wires": []
    },
    {
        "id": "8e10011ddb497877",
        "type": "function",
        "z": "99285b04ab31eeb3",
        "g": "fb950f3a0b286899",
        "name": "Tag json with metric name",
        "func": "const new_payload = {}\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index];\n    let topic = element['topic'];\n    let metric = topic.split('/');\n    metric = metric[metric.length - 1];\n    if(!Object.hasOwn(new_payload, metric)){\n        new_payload[metric] = [];\n    }\n    new_payload[metric].push(element);\n}\nmsg.payload = new_payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 760,
        "wires": [
            [
                "9da49b95aeeae627"
            ]
        ]
    },
    {
        "id": "30551fdae7dbe478",
        "type": "inject",
        "z": "99285b04ab31eeb3",
        "name": "initial sensors",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sensors\":{\"temperature\":{\"livingroom_temp_1\":{\"room\":\"livingroom\",\"starting_value\":22,\"data_type\":\"float\",\"delta_range\":[-0.1,0.1],\"lower_limit\":15,\"lower_limit_correction\":[0,0.2],\"upper_limit\":25,\"upper_limit_correction\":[-0.2,0]}},\"light\":{\"livingroom_light_1\":{\"room\":\"livingroom\",\"starting_value\":10,\"data_type\":\"int\",\"lux_per_lamp\":60,\"lux_from_sun\":10000},\"kitchen_light_1\":{\"room\":\"kitchen\",\"starting_value\":10,\"data_type\":\"int\",\"lux_per_lamp\":60,\"lux_from_sun\":9500},\"bathroom_light_1\":{\"room\":\"bathroom\",\"starting_value\":10,\"data_type\":\"int\",\"lux_per_lamp\":60,\"lux_from_sun\":7000},\"bedroom_light_1\":{\"room\":\"bedroom\",\"starting_value\":10,\"data_type\":\"int\",\"lux_per_lamp\":60,\"lux_from_sun\":7000}},\"energy\":{\"livingroom_thermostat_1\":{\"room\":\"livingroom\",\"starting_value\":2,\"data_type\":\"int\",\"delta_range\":[-1,3]},\"livingroom_lamp_1\":{\"room\":\"livingroom\",\"starting_value\":8,\"data_type\":\"int\",\"delta_range\":[-1,7]},\"livingroom_lamp_2\":{\"room\":\"livingroom\",\"starting_value\":8,\"data_type\":\"int\",\"delta_range\":[-1,7]},\"kitchen_lamp_1\":{\"room\":\"kitchen\",\"starting_value\":8,\"data_type\":\"int\",\"delta_range\":[-1,7]},\"bathroom_lamp_1\":{\"room\":\"bathroom\",\"starting_value\":8,\"data_type\":\"int\",\"delta_range\":[-1,7]},\"bedroom_lamp_1\":{\"room\":\"bedroom\",\"starting_value\":8,\"data_type\":\"int\",\"delta_range\":[-1,7]},\"kitchen_dishwasher_1\":{\"room\":\"kitchen\",\"starting_value\":1000,\"data_type\":\"int\",\"delta_range\":[-200,500]},\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"starting_value\":150,\"data_type\":\"int\",\"delta_range\":[-50,150]}},\"smart_appliance\":{\"kitchen_fridge_1\":{\"room\":\"kitchen\",\"values\":{\"load\":{\"starting_value\":50,\"data_type\":\"int\",\"open_delta_range\":[-3,3],\"refill_threshold\":7,\"refill_delta_range\":[3,46]},\"temp\":{\"starting_value\":4,\"data_type\":\"float\",\"delta_range\":[-0.1,0],\"open_delta_range\":[0,2],\"refill_threshold\":7,\"refill_delta_range\":[1,4],\"lower_limit\":2,\"lower_limit_correction\":[0,0.1],\"upper_limit\":10,\"upper_limit_correction\":[-0.2,0]}}}}}}",
        "payloadType": "json",
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "c00e4019eed03f58"
            ]
        ]
    },
    {
        "id": "c00e4019eed03f58",
        "type": "mqtt out",
        "z": "99285b04ab31eeb3",
        "name": "",
        "topic": "/SmartHomeD&G/simulation/config",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a928ba0.2d1f748",
        "x": 440,
        "y": 1220,
        "wires": []
    }
]